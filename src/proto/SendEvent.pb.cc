// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SendEvent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SendEvent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class SendEventRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendEventRequest> {
} _SendEventRequest_default_instance_;
class SendEvnetResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendEvnetResponse> {
} _SendEvnetResponse_default_instance_;

namespace protobuf_SendEvent_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendEventRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendEventRequest, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendEventRequest, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendEvnetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendEvnetResponse, response_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SendEventRequest)},
  { 8, -1, sizeof(SendEvnetResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendEvnetResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SendEvent.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _SendEventRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SendEvnetResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SendEventRequest_default_instance_.DefaultConstruct();
  _SendEvnetResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017SendEvent.proto\022\005proto\"\?\n\020SendEventReq"
      "uest\022\r\n\005appId\030\001 \001(\t\022\r\n\005event\030\002 \001(\t\022\r\n\005ex"
      "tra\030\003 \001(\t\"%\n\021SendEvnetResponse\022\020\n\010respon"
      "se\030\001 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 136);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SendEvent.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SendEvent_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendEventRequest::kAppIdFieldNumber;
const int SendEventRequest::kEventFieldNumber;
const int SendEventRequest::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendEventRequest::SendEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SendEvent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SendEventRequest)
}
SendEventRequest::SendEventRequest(const SendEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appid().size() > 0) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event().size() > 0) {
    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SendEventRequest)
}

void SendEventRequest::SharedCtor() {
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SendEventRequest::~SendEventRequest() {
  // @@protoc_insertion_point(destructor:proto.SendEventRequest)
  SharedDtor();
}

void SendEventRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendEventRequest::descriptor() {
  protobuf_SendEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SendEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendEventRequest& SendEventRequest::default_instance() {
  protobuf_SendEvent_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendEventRequest* SendEventRequest::New(::google::protobuf::Arena* arena) const {
  SendEventRequest* n = new SendEventRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SendEventRequest)
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SendEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SendEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SendEventRequest.appId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event().data(), this->event().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SendEventRequest.event"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extra = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra().data(), this->extra().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SendEventRequest.extra"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SendEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SendEventRequest)
  return false;
#undef DO_
}

void SendEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SendEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appId = 1;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEventRequest.appId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // string event = 2;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event().data(), this->event().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEventRequest.event");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->event(), output);
  }

  // string extra = 3;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEventRequest.extra");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.SendEventRequest)
}

::google::protobuf::uint8* SendEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SendEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appId = 1;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEventRequest.appId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // string event = 2;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event().data(), this->event().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEventRequest.event");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->event(), target);
  }

  // string extra = 3;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEventRequest.extra");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.SendEventRequest)
  return target;
}

size_t SendEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SendEventRequest)
  size_t total_size = 0;

  // string appId = 1;
  if (this->appid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  // string event = 2;
  if (this->event().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event());
  }

  // string extra = 3;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SendEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SendEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SendEventRequest)
    MergeFrom(*source);
  }
}

void SendEventRequest::MergeFrom(const SendEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SendEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appid().size() > 0) {

    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.event().size() > 0) {

    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
}

void SendEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SendEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendEventRequest::CopyFrom(const SendEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SendEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendEventRequest::IsInitialized() const {
  return true;
}

void SendEventRequest::Swap(SendEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendEventRequest::InternalSwap(SendEventRequest* other) {
  appid_.Swap(&other->appid_);
  event_.Swap(&other->event_);
  extra_.Swap(&other->extra_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendEventRequest::GetMetadata() const {
  protobuf_SendEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SendEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendEventRequest

// string appId = 1;
void SendEventRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendEventRequest::appid() const {
  // @@protoc_insertion_point(field_get:proto.SendEventRequest.appId)
  return appid_.GetNoArena();
}
void SendEventRequest::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendEventRequest.appId)
}
#if LANG_CXX11
void SendEventRequest::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendEventRequest.appId)
}
#endif
void SendEventRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendEventRequest.appId)
}
void SendEventRequest::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendEventRequest.appId)
}
::std::string* SendEventRequest::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendEventRequest.appId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendEventRequest::release_appid() {
  // @@protoc_insertion_point(field_release:proto.SendEventRequest.appId)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendEventRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:proto.SendEventRequest.appId)
}

// string event = 2;
void SendEventRequest::clear_event() {
  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendEventRequest::event() const {
  // @@protoc_insertion_point(field_get:proto.SendEventRequest.event)
  return event_.GetNoArena();
}
void SendEventRequest::set_event(const ::std::string& value) {
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendEventRequest.event)
}
#if LANG_CXX11
void SendEventRequest::set_event(::std::string&& value) {
  
  event_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendEventRequest.event)
}
#endif
void SendEventRequest::set_event(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendEventRequest.event)
}
void SendEventRequest::set_event(const char* value, size_t size) {
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendEventRequest.event)
}
::std::string* SendEventRequest::mutable_event() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendEventRequest.event)
  return event_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendEventRequest::release_event() {
  // @@protoc_insertion_point(field_release:proto.SendEventRequest.event)
  
  return event_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendEventRequest::set_allocated_event(::std::string* event) {
  if (event != NULL) {
    
  } else {
    
  }
  event_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event);
  // @@protoc_insertion_point(field_set_allocated:proto.SendEventRequest.event)
}

// string extra = 3;
void SendEventRequest::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendEventRequest::extra() const {
  // @@protoc_insertion_point(field_get:proto.SendEventRequest.extra)
  return extra_.GetNoArena();
}
void SendEventRequest::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendEventRequest.extra)
}
#if LANG_CXX11
void SendEventRequest::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendEventRequest.extra)
}
#endif
void SendEventRequest::set_extra(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendEventRequest.extra)
}
void SendEventRequest::set_extra(const char* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendEventRequest.extra)
}
::std::string* SendEventRequest::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendEventRequest.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendEventRequest::release_extra() {
  // @@protoc_insertion_point(field_release:proto.SendEventRequest.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendEventRequest::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:proto.SendEventRequest.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendEvnetResponse::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendEvnetResponse::SendEvnetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SendEvent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SendEvnetResponse)
}
SendEvnetResponse::SendEvnetResponse(const SendEvnetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response().size() > 0) {
    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SendEvnetResponse)
}

void SendEvnetResponse::SharedCtor() {
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SendEvnetResponse::~SendEvnetResponse() {
  // @@protoc_insertion_point(destructor:proto.SendEvnetResponse)
  SharedDtor();
}

void SendEvnetResponse::SharedDtor() {
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendEvnetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendEvnetResponse::descriptor() {
  protobuf_SendEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SendEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendEvnetResponse& SendEvnetResponse::default_instance() {
  protobuf_SendEvent_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendEvnetResponse* SendEvnetResponse::New(::google::protobuf::Arena* arena) const {
  SendEvnetResponse* n = new SendEvnetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendEvnetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SendEvnetResponse)
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SendEvnetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SendEvnetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response().data(), this->response().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SendEvnetResponse.response"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SendEvnetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SendEvnetResponse)
  return false;
#undef DO_
}

void SendEvnetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SendEvnetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response = 1;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEvnetResponse.response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->response(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.SendEvnetResponse)
}

::google::protobuf::uint8* SendEvnetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SendEvnetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response = 1;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendEvnetResponse.response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->response(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.SendEvnetResponse)
  return target;
}

size_t SendEvnetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SendEvnetResponse)
  size_t total_size = 0;

  // string response = 1;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendEvnetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SendEvnetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendEvnetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendEvnetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SendEvnetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SendEvnetResponse)
    MergeFrom(*source);
  }
}

void SendEvnetResponse::MergeFrom(const SendEvnetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SendEvnetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.response().size() > 0) {

    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
}

void SendEvnetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SendEvnetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendEvnetResponse::CopyFrom(const SendEvnetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SendEvnetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendEvnetResponse::IsInitialized() const {
  return true;
}

void SendEvnetResponse::Swap(SendEvnetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendEvnetResponse::InternalSwap(SendEvnetResponse* other) {
  response_.Swap(&other->response_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendEvnetResponse::GetMetadata() const {
  protobuf_SendEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SendEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendEvnetResponse

// string response = 1;
void SendEvnetResponse::clear_response() {
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendEvnetResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.SendEvnetResponse.response)
  return response_.GetNoArena();
}
void SendEvnetResponse::set_response(const ::std::string& value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendEvnetResponse.response)
}
#if LANG_CXX11
void SendEvnetResponse::set_response(::std::string&& value) {
  
  response_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendEvnetResponse.response)
}
#endif
void SendEvnetResponse::set_response(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendEvnetResponse.response)
}
void SendEvnetResponse::set_response(const char* value, size_t size) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendEvnetResponse.response)
}
::std::string* SendEvnetResponse::mutable_response() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendEvnetResponse.response)
  return response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendEvnetResponse::release_response() {
  // @@protoc_insertion_point(field_release:proto.SendEvnetResponse.response)
  
  return response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendEvnetResponse::set_allocated_response(::std::string* response) {
  if (response != NULL) {
    
  } else {
    
  }
  response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response);
  // @@protoc_insertion_point(field_set_allocated:proto.SendEvnetResponse.response)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
